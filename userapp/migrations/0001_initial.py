# Generated by Django 4.2.1 on 2023-07-03 03:57

import autoslug.fields
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Field",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="Nomi"),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="name", unique=True
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=100000,
                        max_digits=8,
                        null=True,
                        verbose_name="Narxi",
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        default=6, verbose_name="Kurs davomiyligi"
                    ),
                ),
                ("status", models.BooleanField(default=True, verbose_name="Holati")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Kurs",
                "verbose_name_plural": "Kurslar",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Vazifasi nomi")),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="name", unique=True
                    ),
                ),
                ("status", models.BooleanField(default=True, verbose_name="Holati")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=100, verbose_name="Ismi")),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="full_name", unique=True
                    ),
                ),
                ("date_of_birth", models.DateField(verbose_name="Tug'ilgan sanasi")),
                (
                    "passport",
                    models.CharField(
                        max_length=15, unique=True, verbose_name="Passport"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=12,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefon raqamingiz 9 bilan boshlanishi va 12 belgidan oshmasligi lozim. Masalan: 998334568978",
                                regex="^[\\+]?[9]{2}[8]?[0-9]{2}?[0-9]{3}?[0-9]{2}?[0-9]{2}$",
                            )
                        ],
                        verbose_name="tel. raqam",
                    ),
                ),
                (
                    "father_name",
                    models.CharField(max_length=100, verbose_name="otasining ismi"),
                ),
                (
                    "father_phone",
                    models.CharField(
                        max_length=12,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefon raqamingiz 9 bilan boshlanishi va 12 belgidan oshmasligi lozim. Masalan: 998334568978",
                                regex="^[\\+]?[9]{2}[8]?[0-9]{2}?[0-9]{3}?[0-9]{2}?[0-9]{2}$",
                            )
                        ],
                        verbose_name="tel. raqam",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("toq", "Du-Chor-Ju"),
                            ("juft", "Se-Pay-Shan"),
                            ("boot", "Bootcamp"),
                        ],
                        default="toq",
                        max_length=25,
                    ),
                ),
                (
                    "time",
                    models.CharField(
                        choices=[
                            ("8", "8:00-11:00"),
                            ("12", "12:00-14:00"),
                            ("14", "14:00-17:00"),
                        ],
                        default="8",
                        max_length=25,
                    ),
                ),
                ("status", models.BooleanField(default=True, verbose_name="Holati")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="students",
                        to="userapp.field",
                        verbose_name="Yo'nalishi",
                    ),
                ),
            ],
            options={
                "verbose_name": "O'quvchi",
                "verbose_name_plural": "O'quvchilar",
            },
        ),
        migrations.CreateModel(
            name="Worker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "full_name",
                    models.CharField(max_length=100, verbose_name="Ism familya"),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="full_name", unique=True
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=12,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefon raqamingiz 9 bilan boshlanishi va 12 belgidan oshmasligi lozim. Masalan: 998334568978",
                                regex="^[\\+]?[9]{2}[8]?[0-9]{2}?[0-9]{3}?[0-9]{2}?[0-9]{2}$",
                            )
                        ],
                        verbose_name="tel. raqam",
                    ),
                ),
                ("passport", models.CharField(max_length=15, verbose_name="Passport")),
                (
                    "percentage",
                    models.PositiveIntegerField(
                        blank=True,
                        default=10,
                        null=True,
                        verbose_name="Ishchining foizi",
                    ),
                ),
                (
                    "salary",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="Maoshi",
                    ),
                ),
                ("status", models.BooleanField(default=True, verbose_name="Holati")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "diriction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workers",
                        to="userapp.field",
                        verbose_name="O'qtuvchining yo'nalishi",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="workers",
                        to="userapp.role",
                        verbose_name="Vazifasi",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Xodim",
                "verbose_name_plural": "Xodimlar",
            },
        ),
    ]
